# PrintTriangle program

# Start Registers
[PC]            0x00000000    # Start position
[R29]           0x000ffff0    # Initial Stack pointer

# Startup Code
[0x00000000]	0x8fa40000  lw $4, 0($29)                   ; 183: lw $a0 0($sp)		# argc
[0x00000004]	0x27a50004  addiu $5, $29, 4                ; 184: addiu $a1 $sp 4		# argv
[0x00000008]	0x24a60004  addiu $6, $5, 4                 ; 185: addiu $a2 $a1 4		# envp
[0x0000000c]	0x00041080  sll $2, $4, 2                   ; 186: sll $v0 $a0 2
[0x00000010]	0x00c23021  addu $6, $6, $2                 ; 187: addu $a2 $a2 $v0
[0x00000014]	0x0c000009  jal 0x00400024 [main]           ; 188: jal main
[0x00000018]	0x00000000  nop                             ; 189: nop
[0x0000001c]	0x3402000a  ori $2, $0, 10                  ; 191: li $v0 10
[0x00000020]	0x0000000c  syscall                         ; 192: syscall			# syscall 10 (exit)

# main method
[0x00000024]	0x27bdfff4  addiu $29, $29, -12             ; 41: addiu $sp, $sp, -12
[0x00000028]	0xafb00008  sw $16, 8($29)                  ; 42: sw $s0, 8($sp)
[0x0000002c]	0xafb10004  sw $17, 4($29)                  ; 43: sw $s1, 4($sp)
[0x00000030]	0xafbf0000  sw $31, 0($29)                  ; 44: sw $ra, 0($sp)
[0x00000034]	0x34020004  ori $2, $0, 4                   ; 47: li $v0, 4  
[0x00000038]	0x3c040001  lui $4, 4097 [prompt]           ; 48: la $a0, prompt  
[0x0000003c]	0x0000000c  syscall                         ; 49: syscall        
[0x00000040]	0x34020005  ori $2, $0, 5                   ; 52: li $v0, 5
[0x00000044]	0x0000000c  syscall                         ; 53: syscall
[0x00000048]	0x00028021  addu $16, $0, $2                ; 54: move $s0, $v0
[0x0000004c]	0x34110001  ori $17, $0, 1                  ; 57: li $s1, 1
[0x00000050]	0x0230082a  slt $1, $17, $16                ; 61: bge $s1, $s0, afterMainWhile
[0x00000054]	0x10200007  beq $1, $0, 28 [afterMainWhile-0x00400054]
[0x00000058]	0x00000000  nop                             ; 62: nop
[0x0000005c]	0x00112021  addu $4, $0, $17                ; 65: move $a0, $s1
[0x00000060]	0x0c000023  jal 0x0040008c [printX]         ; 66: jal printX
[0x00000064]	0x00000000  nop                             ; 67: nop
[0x00000068]	0x26310001  addiu $17, $17, 1               ; 70: addiu $s1, $s1, 1
[0x0000006c]	0x08000014  j 0x00400050 [mainWhile]        ; 71: j mainWhile
[0x00000070]	0x00000000  nop                             ; 72: nop
[0x00000074]	0x8fb00008  lw $16, 8($29)                  ; 76: lw $s0, 8($sp)
[0x00000078]	0x8fb10004  lw $17, 4($29)                  ; 77: lw $s1, 4($sp)
[0x0000007c]	0x8fbf0000  lw $31, 0($29)                  ; 78: lw $ra, 0($sp)
[0x00000080]	0x27bd000c  addiu $29, $29, 12              ; 79: addiu $sp, $sp, 12
[0x00000084]	0x03e00008  jr $31                          ; 82: jr $ra
[0x00000088]	0x00000000  nop                             ; 83: nop

# printX method
[0x0000008c]	0x00044821  addu $9, $0, $4                 ; 104: move $t1, $a0
[0x00000090]	0x34080000  ori $8, $0, 0                   ; 107: li $t0, 0
[0x00000094]	0x0109082a  slt $1, $8, $9                  ; 111: bge $t0, $t1, afterPrintXloop
[0x00000098]	0x10200008  beq $1, $0, 32 [afterPrintXloop-0x00400098]
[0x0000009c]	0x00000000  nop                             ; 112: nop
[0x000000a0]	0x34020004  ori $2, $0, 4                   ; 115: li $v0, 4  
[0x000000a4]	0x3c010001  lui $1, 4097 [XX]               ; 116: la $a0, XX  
[0x000000a8]	0x34240011  ori $4, $1, 17 [XX]
[0x000000ac]	0x0000000c  syscall                         ; 117: syscall   
[0x000000b0]	0x25080001  addiu $8, $8, 1                 ; 120: addiu $t0, $t0, 1
[0x000000b4]	0x08000025  j 0x00400094 [printXloop]       ; 121: j printXloop
[0x000000b8]	0x00000000  nop                             ; 122: nop
[0x000000bc]	0x34020004  ori $2, $0, 4                   ; 126: li $v0, 4  
[0x000000c0]	0x3c010001  lui $1, 4097 [newline]          ; 127: la $a0, newline  
[0x000000c4]	0x34240013  ori $4, $1, 19 [newline]
[0x000000c8]	0x0000000c  syscall                         ; 128: syscall 
[0x000000cc]	0x03e00008  jr $31                          ; 131: jr $ra
[0x000000d0]	0x00000000  nop                             ; 132: nop

# Data segment
[0x00010000]		        0x65746e45  0x20612072  0x626d756e  0x203a7265
[0x00010010]		        0x0a005800  0x00000000  0x00000000  0x00000000

